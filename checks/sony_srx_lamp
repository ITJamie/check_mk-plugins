#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Jeremy Leggat <jleggat@asu.edu>
# --------------------------------------------------------------------------------
# 1. Fibre Channel Module Entry info
# Polls the .1.3.6.1.4.1.122.8501 oid, FIBRE-CHANNEL-FE-MIB::fcFeModuleTable
# "A table that contains, one entry for each module in the Fabric Element, information of the modules."
# Reads:

factory_settings["sony_srx_lamp_default_levels"] = {
    "max_hours" : 2000,
}

def inventory_sony_srx_lamp(checkname, info):
  inventory = []
  for index, model, hours in info:
    inventory.append( (index, None) )
  return inventory

def check_sony_srx_lamp(item, _no_params, info):
  for index, model, hours in info:
    if index == item:
      this_time = time.time()
      timedif, rate = get_counter("sony_srx_lamp.hours.%s" % item, this_time, int(hours))
      perfdata = [ ( "lamp_hours", rate ) ]
      msg_txt = "%s on bulb %s" % (hours, model)
      if int(hours) > params["max_hours"]:
        return (2, "CRITICAL - %s" % msg_txt)
      else:
        return (0, "OK - %s" % msg_txt)
  return False

check_info["sony_srx_lamp"] = {
    "inventory_function"       : inventory_sony_srx_lamp,
    "check_function"           : check_sony_srx_lamp,
    "has_perfdata"             : True,
    "service_description"      : "Lamp %s",
    "default_levels_variable"  : "sony_srx_lamp_default_levels",
}

snmp_info["sony_srx_lamp"] = ( ".1.3.6.1.4.1.122.8501.3.109.4.1.1", [ \
  "1", \
  "2", \
  "3", \
] )

snmp_scan_functions['sony_srx_lamp'] = \
  lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.122.8501")
