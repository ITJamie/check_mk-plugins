#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# --------------------------------------------------------------------------------
# 1. Fibre Alliance port info
# Polls the .1.3.6.1.3.94.1.10 oid, FCMGMT-MIB::connUnitPortTable
# "Generic information on ports for a specific connUnit."

check_includes['fa'] = [ "fa.include" ]

def fa_port_itemname(id,index):
	unitid=fa_hex2string(id)
	return unitid + "_" + index
def fa_port_typename(st):
    names = { '1': "unknown", '2': "other",
            '3': "not-present", '4': "hub-port",
            '5': "n-port", '6': "nl-port",
            '7': "fl-port", '8': "f-port",
            '9': "e-port", '10': "g-port",
            '11': "domain-ctl", '12': "hub-controller",
            '13': "scsi", '14': "escon",
            '15': "lan", '16': "wan",
            '17': "ac", '18': "dc",
            '19': "ssa", '20': "wdm",
            '21': "ib", '22': "ipstore" }
    return names.get(st, st)
def fa_port_statename(st):
    names = { '1': "unknown", '2': "online",
             '3': "offline", '4': "bypassed",
             '5': "diagnostics" }
    return names.get(st, st)
def fa_port_statusname(st):
    names = { '1': "unknown", '2': "unused",
            '3': "ready", '4': "warning",
            '5': "failure", '6': "notparticipating",
            '7': "initializing", '8': "bypass",
            '9': "ols", '10': "other" }
    return names.get(st, st)
def fa_port_transmittername(st):
    names = { '1': "unknown", '2': "other",
            '3': "unused", '4': "shortwave",
            '5': "longwave", '6': "copper",
            '7': "scsi", '8': "longwaveNoOFC",
            '9': "shortwaveNoOFC", '10': "longwaveLED",
            '11': "ssa" }
    return names.get(st, st)
def fa_port_modulename(st):
    names = { '1': "unknown", '2': "other",
            '3': "gbic", '4': "embedded",
            '5': "glm", '6': "gbicSerialId",
            '7': "gbicNoSerialId", '8': "gbicNotInstalled",
            '9': "smallFormFactor" }
    return names.get(st, st)
def fa_port_hwstatename(st):
    names = { '1': "unknown", '2': "failed",
            '3': "bypassed", '4': "active",
            '5': "loopback", '6': "txfault",
            '7': "noMedia", '8': "linkDown" }
    return names.get(st, st)


def inventory_fa_port(checkname, info):
  inventory = []
  for id, index, type, state, status, transmitter, module, speed, hwstate in info:
    if status != "1":
      name = fa_port_itemname(id,index)
      inventory.append( (name, (state,type,speed,transmitter,hwstate)) )
  return inventory

def check_fa_port(item, params, info):
  for id, index, type, state, status, transmitter, module, speed, hwstate in info:
    if fa_port_itemname(id,index) == item:
      statename = fa_port_statename(state)
      typename = fa_port_typename(type)
      transmittername = fa_port_transmittername(transmitter)
      statusname = fa_port_statusname(status)
      modulename = fa_port_modulename(module)
      hwstatename = fa_port_hwstatename(hwstate)
      msg_text = "%s %s %s - %s %s %s" % (statename, statusname, hwstatename, modulename, transmittername, typename,)

      if (state,type,speed,transmitter,hwstate) != params or status in ["4", "5", "7"] or hwstatename == "2":
        if state == "2" and status != "5" and hwstatename != "2":
          return (1, "WARN - port %s, but should be %s" % (statename,fa_port_statename(params[0])))
        else:
          return (2, "CRITICAL - %s" % msg_text)
      else:
        return (0, "OK - %s" % msg_text)

      return (3, "UNKNOWN - Port info not found")

check_info["fa_port"] = \
  (check_fa_port, "FA Port %s", 0, inventory_fa_port)

snmp_info["fa_port"] = \
	( ".1.3.6.1.3.94.1.10.1", [
		"1",	# connUnitPortUnitId
		"2",	# connUnitPortIndex
		"3",	# connUnitPortType			unknown(1), other(2), not-present(3), hub-port(4), n-port(5), nl-port(6), fl-port(7), f-port(8), e-port(9), g-port(10), domain-ctl(11), hub-controller(12), scsi(13), escon(14), lan(15), wan(16), ac(17), dc(18), ssa(19), wdm(20), ib(21), ipstore(22)
		"6",	# connUnitPortState			unknown(1), online(2), offline(3), bypassed(4), diagnostics(5)
		"7",	# connUnitPortStatus		unknown(1), unused(2), ready(3), warning(4), failure(5), notparticipating(6), initializing(7), bypass(8), ols(9), other(10)
		"8",	# connUnitPortTransmitterType	unknown(1), other(2), unused(3), shortwave(4), longwave(5), copper(6), scsi(7), longwaveNoOFC(8), shortwaveNoOFC(9), longwaveLED(10), ssa(11)
		"9",	# connUnitPortModuleType	unknown(1), other(2), gbic(3), embedded(4), glm(5), gbicSerialId(6), gbicNoSerialId(7), gbicNotInstalled(8), smallFormFactor(9)
		"15",	# connUnitPortSpeed
		"23",	# connUnitPortHWState		unknown(1), failed(2), bypassed(3), active(4), loopback(5), txfault(6), noMedia(7), linkDown(8)
	] )

snmp_scan_functions['fa_port'] = \
  lambda oid: oid(".1.3.6.1.3.94.1.1.0") != None
