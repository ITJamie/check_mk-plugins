#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# --------------------------------------------------------------------------------
# 1. Promise VTrack Fan status

def vtrack_fans_typename(st):
    names = { '1': "fan", '2': "blower" }
    return names.get(st, st)

def inventory_vtrack_fans(checkname, info):
  inventory = []
  for index, type, status, speed in info:
    inventory.append( (index, None) )
  return inventory

def check_vtrack_fans(item, _no_params, info):
  for index, type, status, speed in info:
    if index == item:
      perfdata = [ ( "DeviceSpeed", speed) ]
      if status == "Functional":
        return (0, "OK - running at " + speed, perfdata)
      else:
        return (2, "CRITICAL - " + speed, perfdata)
  return (3, "UNKNOWN - fans not found")

check_info["vtrack_fans"] = \
      (check_vtrack_fans, "Fan %s", 1, inventory_vtrack_fans)

snmp_info["vtrack_fans"] = \
	( ".1.3.6.1.4.1.7933.1.20.1.11.1", [
		"1",	# raidv4CoolingDeviceIndex
		"2",	# raidv4CoolingDeviceType	Values: fan(0), blower(1)
		"3",	# raidv4CoolingDeviceStatus
		"4",	# raidv4CoolingDeviceSpeed
	] )
snmp_scan_functions['vtrack_fans'] = \
  lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.7933.1.10")
