# --------------------------------------------------------------------------------
# 1. Fibre Alliance sensor info
# Polls the .1.3.6.1.3.94.1.8.1 oid, FCMGMT-MIB::connUnitSensorEntry
# "Each entry contains the information for a specific sensor."
# Reads:
#  .1.3.6.1.3.94.1.8.1.2, FCMGMT-MIB::connUnitSensorIndex, INTEGER (1..2147483647)
#  .1.3.6.1.3.94.1.8.1.3, FCMGMT-MIB::connUnitSensorName, OCTET STRING
#  .1.3.6.1.3.94.1.8.1.4, FCMGMT-MIB::connUnitSensorStatus, INTEGER {unknown(1), other(2), ok(3), warning(4), failed(5)}
#  .1.3.6.1.3.94.1.8.1.6, FCMGMT-MIB::connUnitSensorMessage, OCTET STRING
#  .1.3.6.1.3.94.1.8.1.7, FCMGMT-MIB::connUnitSensorType, INTEGER {unknown(1), other(2), battery(3), fan(4), power-supply(5), transmitter(6), enclosure(7), board(8), receiver(9)}
#  .1.3.6.1.3.94.1.8.1.8, FCMGMT-MIB::connUnitSensorCharacteristic, INTEGER {unknown(1), other(2), temperature(3), pressure(4), emf(5), currentValue(6), airflow(7), frequency(8), power(9), door(10)}

def inventory_fibrealliance_sensor(checkname, info):
  inventory = []
  for name, status, message in info:
    if status != "1":
      inventory.append( (name, None) )
  return inventory

def check_fibrealliance_sensor(item, _no_params, info):
  for name, status, message in info:
    if name == item:
      if status == "3":
        return (0, "OK - " + message)
      else:
        return (2, "CRITICAL - " + message)
  return (3, "UNKNOWN - Sensor info not found")

check_info["fibrealliance_sensor"] = \
      (check_fibrealliance_sensor, "%s", 0, inventory_fibrealliance_sensor)

snmp_info["fibrealliance_sensor"] = ( ".1.3.6.1.3.94.1.8.1", [ "3", "4", "6" ] )
snmp_scan_functions['fibrealliance_sensor'] = \
  lambda oid: oid(".1.3.6.1.3.94.1.1.0") != None